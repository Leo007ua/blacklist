{"version":3,"file":"static/js/285.2fc969b5.chunk.js","mappings":"iRAWaA,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,KAE7BC,EAAAA,EAAAA,YAAU,WACHH,GACLF,EAAS,YAAa,CAAEM,SAAS,GACnC,GAAG,CAACJ,EAAUF,IAgBd,OACEO,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAAAC,SAAA,EACPC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJF,EAAAA,EAAAA,MAACI,EAAAA,EAAU,CAACC,SAjBK,SAAAC,GACnBA,EAAIC,iBAEJ,IAAML,EAAWI,EAAIE,cAAcC,SAK7BC,EAAW,CAAEC,KAJNT,EAASS,KAAKC,MAIFC,MAHXX,EAASW,MAAMD,MAGGE,SAFfZ,EAASY,SAASF,OAInCrB,GAASwB,EAAAA,EAAAA,IAAcL,IACvBJ,EAAIE,cAAcQ,OACpB,EAKuCd,SAAA,EACjCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,WACNC,EAAAA,EAAAA,KAAA,SAAOc,KAAK,OAAON,KAAK,OAAQO,YAAY,YAAYC,UAAQ,KAChEhB,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YACNC,EAAAA,EAAAA,KAAA,SAAOc,KAAK,QAAQN,KAAK,QAAQO,YAAY,aAAaC,UAAQ,KAClEhB,EAAAA,EAAAA,KAAA,QAAAD,SAAM,eACNC,EAAAA,EAAAA,KAAA,SAAOc,KAAK,WAAWN,KAAK,WAAWS,UAAW,EAAGF,YAAY,gBAAgBC,UAAQ,KACzFhB,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAAQf,UAACC,EAAAA,EAAAA,KAACkB,EAAAA,IAAuB,CAACC,KAAMC,EAAAA,EAAAA,gBAI7D,EAEA,W,wGCjDatB,EAAWuB,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qDAKrBtB,EAAaoB,EAAAA,GAAAA,KAAWG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,utB","sources":["pages/Register.jsx","pages/RegisterStyled.js"],"sourcesContent":["import React from 'react';\nimport { FormStyled, FormWrap } from './RegisterStyled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerThunk } from 'redux/Thunks/authThunk';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { selectUserName } from 'redux/selectors';\n\nimport { HiMiniArrowDownOnSquare} from \"react-icons/hi2\";\nimport { iconsSize } from 'components/Icon/iconSize';\n\nexport const Register = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userName = useSelector(selectUserName);\n\n  useEffect(() => {\n    if (!userName) return;\n    navigate('/contacts', { replace: true });\n  }, [userName, navigate]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const children = evt.currentTarget.elements;\n    const name = children.name.value;\n    const email = children.email.value;\n    const password = children.password.value;\n\n    const userData = { name, email, password };\n\n    dispatch(registerThunk(userData));\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <FormWrap>\n      <h3>Registration</h3>\n      <FormStyled onSubmit={handleSubmit}>\n        <span>Name:</span>\n        <input type=\"text\" name=\"name\"  placeholder=\"Your name\" required />\n        <span>Email:</span>\n        <input type=\"email\" name=\"email\" placeholder=\"Your email\" required />\n        <span>Password:</span>\n        <input type=\"password\" name=\"password\" minLength={7} placeholder=\"Your password\" required />\n        <button type=\"submit\"><HiMiniArrowDownOnSquare size={iconsSize.medium} /></button>\n      </FormStyled>\n    </FormWrap>\n  );\n};\n\nexport default Register;\n","import styled from 'styled-components';\n\nexport const FormWrap = styled.div`\n  max-width: 500px;\n  margin: 70px auto;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  span {\n    font-size: 16px;\n    font-weight: bold;\n  }\n  input {\n    width: 300px;\n    padding: 5px;\n    font-size: 14px;\n    border-radius: 8px;\n    box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n      rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n\n    &:focus {\n      outline: 1px solid green;\n    }\n  }\n  button {\n    width: 100px;\n    cursor: pointer;\n    padding: 5px;\n    font-size: 14px;\n    border-radius: 10px;\n    background-color: aquamarine;\n    &:hover {\n      background-color: lightgreen;\n    }\n    transition: background-color 0.5s;\n\n    &:active {\n      background-color: green;\n      color: white;\n    }\n  }\n`;\n"],"names":["Register","dispatch","useDispatch","navigate","useNavigate","userName","useSelector","selectUserName","useEffect","replace","_jsxs","FormWrap","children","_jsx","FormStyled","onSubmit","evt","preventDefault","currentTarget","elements","userData","name","value","email","password","registerThunk","reset","type","placeholder","required","minLength","HiMiniArrowDownOnSquare","size","iconsSize","styled","_templateObject","_taggedTemplateLiteral","_templateObject2"],"sourceRoot":""}