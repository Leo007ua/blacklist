{"version":3,"file":"static/js/842.89787829.chunk.js","mappings":"yPAEaA,EAAaC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,shC,oBCoErC,I,IAAA,EAlEA,SAAoBC,GAAsB,IAAnBC,EAAcD,EAAdC,eACrBC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAGlBG,EAAiB,SAAAC,GACrB,IAAAC,EAAwBD,EAAIE,cAApBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACD,SAATD,GACFT,EAAeU,GAEJ,WAATD,GACFL,EAAUM,EAEd,EAQMC,EAAQ,WACZX,EAAe,IACfI,EAAU,GACZ,EAEA,OACEQ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAC1B,EAAU,CAAC2B,SAbO,SAAAV,GACrBA,EAAIW,iBACJvB,EAAe,CAAEe,KAAMV,EAAaI,OAAAA,IACpCQ,GACF,EASyCG,SAAA,EACnCC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,WACNF,EAAAA,EAAAA,KAAA,SACEF,MAAOX,EACPmB,KAAK,OACLT,KAAK,OACLU,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUjB,EACVkB,YAAY,kBAGhBR,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aACNF,EAAAA,EAAAA,KAAA,SACEF,MAAOP,EACPe,KAAK,MACLT,KAAK,SACLU,QAAQ,iGACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUjB,EACVkB,YAAY,oBAIhBX,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAAQJ,SAAC,oBAI9B,EC9DaU,EAAoBlC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mG,UCA9BiC,EAAmBnC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+Z,UCsB1C,EAlBoB,SAAHC,GAA2C,IAAtCiC,EAAEjC,EAAFiC,GAAIjB,EAAIhB,EAAJgB,KAAMN,EAAMV,EAANU,OAAQwB,EAAelC,EAAfkC,gBACpC,OACIZ,EAAAA,EAAAA,MAACU,EAAgB,CAAAX,SAAA,EACbC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CACGL,EAAK,KAAGN,MAEXS,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAASU,QAAS,kBAAID,EAAgBD,EAAG,EAACZ,UAACF,EAAAA,EAAAA,KAACiB,EAAAA,IAAS,CAACC,KAAMC,EAAAA,EAAAA,YAJtDL,EAO/B,ECsBA,I,IAAA,EAjCA,SAAiBjC,GAAwC,IAArCuC,EAAevC,EAAfuC,gBAAiBL,EAAelC,EAAfkC,gBAEnC,OACEf,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACY,EAAiB,CAAAV,SACfkB,EAAgBC,KAAI,SAAAC,GAA2B,IAAxBR,EAAEQ,EAAFR,GAAIjB,EAAIyB,EAAJzB,KAAMN,EAAM+B,EAAN/B,OAChC,OACES,EAAAA,EAAAA,KAACuB,EAAW,CAEVT,GAAIA,EACJjB,KAAMA,EACNN,OAAQA,EACRwB,gBAAiBA,GAJZD,EAQX,OAIR,ECtBaU,EAAc9C,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sO,UCoBvC,EAjBe,SAAHC,GAAyC,IAAnCiB,EAAKjB,EAALiB,MAAO2B,EAAoB5C,EAApB4C,qBACvB,OACEtB,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,0BAAsBF,EAAAA,EAAAA,KAAC0B,EAAAA,IAAQ,CAAER,KAAMC,EAAAA,EAAAA,aAC3CnB,EAAAA,EAAAA,KAACwB,EAAW,CACXlB,KAAK,OACLR,MAAOA,EACPY,SAAUe,EACVd,YAAY,kBAGnB,E,UCdagB,EAAUjD,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gG,wCCoBxBgD,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IACpBC,GAAWN,EAAAA,EAAAA,IAAYO,EAAAA,IAEvBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACX,GAAG,CAACH,IAEJ,IASMb,EAAuB,SAAA/B,GAC3B4C,GAASI,EAAAA,EAAAA,GAAchD,EAAIE,cAAcE,OAC3C,EAEMsB,EAA0B,OAARS,QAAQ,IAARA,OAAQ,EAARA,EAAUc,QAAO,SAAAC,GAAO,OAC9CA,EAAQ/C,KAAKgD,cAAcC,SAASV,EAASS,cAAc,IAG7D,OACE1C,EAAAA,EAAAA,MAACwB,EAAO,CAAAzB,SAAA,EACNF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAC+C,EAAW,CAACjE,eApBM,SAAAkE,GACNnB,EAASoB,MAAK,SAAAL,GAAO,OAAIA,EAAQ/C,OAASmD,EAAYnD,IAAI,IAEvEqD,MAAM,GAADC,OAAIH,EAAYnD,KAAI,4BAG3ByC,GAASc,EAAAA,EAAAA,IAAgBJ,GAC3B,EAaiDK,YAAaxB,KAC1D7B,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAACsD,EAAM,CAACxD,MAAOsC,EAAUX,qBAAsBA,IAC9CO,IAAahC,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,IACpBrB,IAAS/B,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,CAAE,uCAAqCgC,MACjDlC,EAAAA,EAAAA,KAACwD,EAAQ,CACPpC,gBAAiBA,EACjBL,gBAAiB,SAAA0C,GACfnB,GAASoB,EAAAA,EAAAA,IAAmBD,GAC9B,EACA3D,MAAOsC,EACPX,qBAAsBA,MAI9B,EAGA,G","sources":["components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.jsx","components/Contacts/ContactsStyled.js","components/ContactItem/ContactItemStyled.js","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.jsx","components/Filter/FilterStyled.js","components/Filter/Filter.jsx","components/SectionStyled.js","components/pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-bottom: 60px;\n\n  .contactForm__field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n  }\n\n  label {\n    font-weight: 700;\n    text-transform: uppercase;\n    color: var(--global-black-color);\n  }\n\n  input {\n    padding-left: 10px;\n    padding-right: 10px;\n    width: 350px;\n    height: 30px;\n    border: none;\n    border-radius: 5px;\n    box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n        rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;;\n    :focus {\n      outline: 1px solid green;\n    }\n  }\n\n  button {\n    width: 100px;\n    height: 30px;\n    background-color: aqua;\n    border: none;\n    border-radius: 5px;\n    box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n        rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;;\n    cursor: pointer;\n    &:active {\n      background-color: green;\n      color: white;\n    }\n    &:hover{\n        background-color: lightgreen;\n    }\n    transition: background-color 0.5s;\n  }\n`;","import PropTypes from 'prop-types';\nimport { StyledForm } from './ContactFormStyled';\nimport { useState } from 'react';\n\nfunction ContactForm({ formAddContact }) {\n  const [nameContact, setNameContact] = useState('');\n  const [number, setNumber] = useState('');\n  \n\n  const handleOnChange = evt => {\n    const { name, value } = evt.currentTarget;\n    if (name === 'name') {\n      setNameContact(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleOnSubmit = evt => {\n    evt.preventDefault();\n    formAddContact({ name: nameContact, number });\n    reset();\n  };\n\n  const reset = () => {\n    setNameContact('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <StyledForm onSubmit={handleOnSubmit}>\n        <label>\n          <span>Name:</span>\n          <input\n            value={nameContact}\n            type=\"text\"\n            name=\"name\"            \n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleOnChange}\n            placeholder=\"Your name\"\n          />\n        </label>\n        <label>\n          <span>Number:</span>\n          <input\n            value={number}\n            type=\"tel\"\n            name=\"number\"            \n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleOnChange}\n            placeholder=\"Your number\"\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </StyledForm>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  formAddContact: PropTypes.func.isRequired,  \n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactsDivStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding-top: 20px;\n`\n\n","import styled from 'styled-components';\n\nexport const ContactDivStyled = styled.div`\n  display: flex;\n  gap: 20px;\n  p {\n    margin: 0;\n    padding: 0;\n    font-size: 18px;\n  }\n\n  button {\n    margin: 0;\n    /* padding: 0; */\n    border-radius: 5px;\n    font-size: 14px;\n    background-color: lightgreen;\n    cursor: pointer;\n    &:hover{\n        background-color: red;\n    }\n    transition: background-color 0.5s;\n    box-shadow: 0px 0px 5px 2px rgba(0, 0, 0, 0.5);\n  }`;\n","import PropTypes from 'prop-types';\nimport { BsArchive } from \"react-icons/bs\";\nimport { ContactDivStyled } from './ContactItemStyled'\nimport { iconsSize } from 'components/Icon/iconSize';\n\n\nconst ContactItem = ({id, name, number, onRemoveContact})=>{\n    return(\n        <ContactDivStyled key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button type='button' onClick={()=>onRemoveContact(id)}><BsArchive size={iconsSize.small}/></button>\n          </ContactDivStyled>\n    )\n}\n\nContactItem.propTypes={\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onRemoveContact: PropTypes.func.isRequired\n}\n\nexport default ContactItem\n","import PropTypes from 'prop-types';\nimport { ContactsDivStyled } from './ContactsStyled';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nfunction Contacts({ filteredContact, onRemoveContact }) {\n  \n  return (\n    <>\n      <ContactsDivStyled>\n        {filteredContact.map(({ id, name, number }) => {\n          return (\n            <ContactItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              onRemoveContact={onRemoveContact}\n            />\n          );\n          \n        })}\n      </ContactsDivStyled>\n    </>\n  );\n}\n\nContacts.propTypes = {\n  filteredContact: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,  \n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const InputStyled = styled.input`\n  padding-left: 10px;\n  padding-right: 10px;\n  width: 350px;\n  height: 30px;\n  border: none;\n  border-radius: 5px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n`;\n","import PropTypes from 'prop-types';\nimport { InputStyled } from './FilterStyled';\nimport { FiFilter } from \"react-icons/fi\";\nimport { iconsSize } from 'components/Icon/iconSize';\n\nconst Filter = ({ value, handleOnChangeFilter }) => {\n  return (\n    <>\n      <h3>Find contacts by name <FiFilter  size={iconsSize.medium}/></h3>\n      <InputStyled\n       type=\"text\"\n       value={value}\n       onChange={handleOnChangeFilter}\n       placeholder=\"Search name\" />\n    </>\n  );\n};\n\nFilter.propTypes = {  \n  handleOnChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 400px;\n  margin: 50px auto 0;\n  display: flex;\n  flex-direction: column;\n`;\n","//import withAuthRedirect from 'HOC/withAuthRedirect';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport { Section } from 'components/SectionStyled';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/Slices/contactsSlice';\nimport {\n  addContactThunk,\n  deleteContactThunk,\n  fetchContactThunk,\n} from 'redux/Thunks/contactsThunk';\nimport {\n  selectContacts,\n  selectError,\n  selectFiltered,\n  selectIsLoading,\n} from 'redux/selectors';\n\nexport const ContactsPage = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filtered = useSelector(selectFiltered);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactThunk());\n  }, [dispatch]);\n\n  const formAddContact = contactData => {\n    const finded = contacts.find(contact => contact.name === contactData.name);\n    if (finded) {\n      alert(`${contactData.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContactThunk(contactData));\n  };\n\n  const handleOnChangeFilter = evt => {\n    dispatch(filterContact(evt.currentTarget.value));\n  };\n\n  const filteredContact = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filtered.toLowerCase())\n  );\n\n  return (\n    <Section>\n      <h1>Blacklist</h1>\n      <ContactForm formAddContact={formAddContact} contactsArr={contacts} />\n      <h2>Contacts</h2>\n      <Filter value={filtered} handleOnChangeFilter={handleOnChangeFilter} />\n      {isLoading && <Loader />}\n      {error && <>Oops something went wrong... Error: {error}</>}\n      <Contacts\n        filteredContact={filteredContact}\n        onRemoveContact={contactId => {\n          dispatch(deleteContactThunk(contactId));\n        }}\n        value={filtered}\n        handleOnChangeFilter={handleOnChangeFilter}\n      />\n    </Section>\n  );\n};\n\n\nexport default ContactsPage;\n"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","_ref","formAddContact","_useState","useState","_useState2","_slicedToArray","nameContact","setNameContact","_useState3","_useState4","number","setNumber","handleOnChange","evt","_evt$currentTarget","currentTarget","name","value","reset","_jsx","_Fragment","children","_jsxs","onSubmit","preventDefault","type","pattern","title","required","onChange","placeholder","ContactsDivStyled","ContactDivStyled","id","onRemoveContact","onClick","BsArchive","size","iconsSize","filteredContact","map","_ref2","ContactItem","InputStyled","handleOnChangeFilter","FiFilter","Section","ContactsPage","contacts","useSelector","selectContacts","isLoading","selectIsLoading","error","selectError","filtered","selectFiltered","dispatch","useDispatch","useEffect","fetchContactThunk","filterContact","filter","contact","toLowerCase","includes","ContactForm","contactData","find","alert","concat","addContactThunk","contactsArr","Filter","Loader","Contacts","contactId","deleteContactThunk"],"sourceRoot":""}